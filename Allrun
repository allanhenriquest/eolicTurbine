#!/bin/bash
# Allrun script para automação de caso OpenFOAM

# Verifica se o OpenFOAM está configurado
if [ -z "$WM_PROJECT_DIR" ]; then
    echo "Por favor, carregue o ambiente do OpenFOAM antes de executar este script."
    exit 1
fi

# Configurações gerais
caseDir=$(pwd)         # Diretório do caso
logDir="$caseDir/logs" # Diretório para armazenar logs
mkdir -p $logDir       # Cria o diretório de logs, se não existir

echo "=== Iniciando o caso no diretório: $caseDir ==="

# Etapa 1: Limpeza de dados anteriores

# Etapa 2: Criando a malha base com blockMesh
# echo "=== Criando malha base com blockMesh ==="
# blockMesh > $logDir/blockMesh.log 2>&1
# if [ $? -ne 0 ]; then
#     echo "Erro durante o blockMesh. Consulte $logDir/blockMesh.log"
#     exit 1
# fi

# # Etapa 3: Refinamento da malha com snappyHexMesh
# echo "=== Refinando malha com snappyHexMesh ==="
# snappyHexMesh -overwrite > $logDir/snappyHexMesh.log 2>&1
# if [ $? -ne 0 ]; then
#     echo "Erro durante o snappyHexMesh. Consulte $logDir/snappyHexMesh.log"
#     exit 1
# fi

# Etapa 4: Checando a qualidade da malha
echo "=== Verificando qualidade da malha ==="
checkMesh > $logDir/checkMesh.log 2>&1
if [ $? -ne 0 ]; then
    echo "Erro durante o checkMesh. Consulte $logDir/checkMesh.log"
    exit 1
fi

# Etapa 5: Configurando campos iniciais
echo "=== Configurando campos iniciais ==="
cp -r 0.orig 0

# Etapa 6: Executando o solver pimpleDyMFoam
echo "=== Executando o solver pimpleDyMFoam ==="
pimpleDyMFoam > $logDir/pimpleDyMFoam.log 2>&1
if [ $? -ne 0 ]; then
    echo "Erro durante a simulação. Consulte $logDir/pimpleDyMFoam.log"
    exit 1
fi

# # Etapa 7: Pós-processamento (opcional)
# echo "=== Iniciando pós-processamento ==="
# postProcess -func forces > $logDir/forces.log 2>&1

# Finalização
echo "=== Caso concluído com sucesso! Consulte o diretório $logDir para logs. ==="
